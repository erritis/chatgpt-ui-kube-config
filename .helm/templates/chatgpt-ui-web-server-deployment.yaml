apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kompose.cmd: kompose convert -f docker-compose.yml -o ./.helm/templates
    kompose.service.expose: {{ .Values.django_domain }}
    kompose.service.expose.ingress-class-name: nginx
    kompose.service.expose.tls-secret: chatgpt-ui-web-server-secret
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: chatgpt-ui-web-server
  name: chatgpt-ui-web-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: chatgpt-ui-web-server
  strategy: {}
  template:
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kompose.cmd: kompose convert -f docker-compose.yml -o ./.helm/templates
        kompose.service.expose: {{ .Values.django_domain }}
        kompose.service.expose.ingress-class-name: nginx
        kompose.service.expose.tls-secret: chatgpt-ui-web-server-secret
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/chatgpt-ui-network: "true"
        io.kompose.service: chatgpt-ui-web-server
    spec:
      containers:
        - env:
            - name: BACKEND_URL
              value: {{ .Values.backend_url }}
          image: wongsaang/chatgpt-ui-web-server:latest
          name: chatgpt-ui-web-server
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}
