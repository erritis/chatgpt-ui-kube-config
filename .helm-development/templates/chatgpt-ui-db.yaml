apiVersion: v1
kind: Secret
metadata:
  name: chatgpt-ui-db-name-secret
  namespace: chatgpt-ui
immutable: false
stringData:
  chatgpt-db: "{{ .Values.Db.Name }}"
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: chatgpt-ui-db-user-secret
  namespace: chatgpt-ui
immutable: false
stringData:
  chatgpt-db-user: "{{ .Values.Db.Username }}"
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: chatgpt-ui-db-passwd-secret
  namespace: chatgpt-ui
immutable: false
stringData:
  chatgpt-db-passwd: "{{ .Values.Db.Password }}"
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.network/chatgpt-ui-network: "true"
    io.service: chatgpt-ui-db
  name: chatgpt-ui-db-service
  namespace: chatgpt-ui
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    io.service: chatgpt-ui-db
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    io.service: chatgpt-ui-db
  name: chatgpt-ui-db-statefulset
  namespace: chatgpt-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      io.service: chatgpt-ui-db
  serviceName: chatgpt-ui-db-service
  template:
    metadata:
      labels:
        io.network/chatgpt-ui-network: "true"
        io.service: chatgpt-ui-db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB_FILE
              value: /run/secrets/chatgpt-db/chatgpt-db
            - name: POSTGRES_USER_FILE
              value: /run/secrets/chatgpt-db-user/chatgpt-db-user
            - name: POSTGRES_PASSWORD_FILE
              value: /run/secrets/chatgpt-db-passwd/chatgpt-db-passwd
          image: postgres:12.9
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -h 127.0.0.1
            failureThreshold: 5
            periodSeconds: 5
            timeoutSeconds: 5
          name: chatgpt-ui-db-statefulset-pod
          ports:
            - containerPort: 5432
          resources: {}
          securityContext:
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /run/secrets/chatgpt-db-passwd
              name: chatgpt-db-passwd
            - mountPath: /run/secrets/chatgpt-db
              name: chatgpt-db
            - mountPath: /run/secrets/chatgpt-db-user
              name: chatgpt-db-user
            - mountPath: /var/lib/postgresql/data
              name: chatgpt-db-claim
      securityContext:
        runAsNonRoot: false
      volumes:
        - name: chatgpt-db
          secret:
            items:
              - key: chatgpt-db
                path: chatgpt-db
            secretName: chatgpt-ui-db-name-secret
        - name: chatgpt-db-user
          secret:
            items:
              - key: chatgpt-db-user
                path: chatgpt-db-user
            secretName: chatgpt-ui-db-user-secret
        - name: chatgpt-db-passwd
          secret:
            items:
              - key: chatgpt-db-passwd
                path: chatgpt-db-passwd
            secretName: chatgpt-ui-db-passwd-secret
  volumeClaimTemplates:
    - metadata:
        labels:
          io.service: chatgpt-ui-db
        name: chatgpt-db-claim
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 0.1Gi
        storageClassName: standard
